#!/bin/bash -e
#
#  Copyright (C) 2015 ScyllaDB

ENA_VER=1.5.3

if [ "`id -u`" -ne 0 ]; then
    echo "Requires root permission."
    exit 1
fi

print_usage() {
    echo "build_install_ami --localrpm --repo [URL]"
    echo "  --localrpm  deploy locally built rpms"
    echo "  --repo  repository for both install and update, specify .repo/.list file URL"
    echo "  --repo-for-install  repository for install, specify .repo/.list file URL"
    echo "  --repo-for-update  repository for update, specify .repo/.list file URL"
    exit 1
}
. /etc/os-release
while [ $# -gt 0 ]; do
    case "$1" in
        "--localrpm")
            INSTALL_ARGS="$INSTALL_ARGS --local-pkg /home/$ID"
            shift 1
            ;;
        "--repo")
            INSTALL_ARGS="$INSTALL_ARGS --repo $2"
            shift 2
            ;;
        "--repo-for-install")
            INSTALL_ARGS="$INSTALL_ARGS --repo-for-install $2"
            shift 2
            ;;
        "--repo-for-update")
            INSTALL_ARGS="$INSTALL_ARGS --repo-for-update $2"
            shift 2
            ;;
        "-h" | "--help")
            print_usage
            ;;
    esac
done

if [ "$ID" = "ubuntu" ]; then
    apt-get purge -y apport
else
    yum remove -y abrt
    mv /home/centos/scylla-ami/scylla-ami-setup.service /usr/lib/systemd/system/
    systemctl daemon-reload
    systemctl enable scylla-ami-setup.service
    mv /home/centos/scylla-ami/amzn-main.repo /etc/yum.repos.d
fi
chmod a+rx /home/$ID/scylla_install_pkg
/home/$ID/scylla_install_pkg $INSTALL_ARGS
grep -v ' - mounts' /etc/cloud/cloud.cfg > /tmp/cloud.cfg
mv /tmp/cloud.cfg /etc/cloud/cloud.cfg
mv /home/$ID/scylla-ami /usr/lib/scylla/scylla-ami
/usr/lib/scylla/scylla_setup --ntp-domain amazon --no-coredump-setup --no-sysconfig-setup --no-raid-setup --no-io-setup --no-bootparam-setup --no-ec2-check
/usr/lib/scylla/scylla_sysconfig_setup --ami
/usr/lib/scylla/scylla_bootparam_setup --ami
rm -fv /home/$ID/.ssh/authorized_keys

if [ "$ID" = "ubuntu" ]; then
    apt-get install -y dkms git
else
    yum -y remove kernel-tools-libs-$(uname -r)
    yum -y update kernel kernel-tools
    yum -y install dkms git grubby kernel-devel kernel-headers
    rpm -e kernel-$(uname -r)
    ln -s /dev/null /etc/udev/rules.d/80-net-name-slot.rules
    AMZKVER=`ls /boot/vmlinuz-*amzn1.x86_64|sed -n "1s#/boot/vmlinuz-##p"`
    grubby --grub2 --set-default /boot/vmlinuz-$AMZKVER
    rm -f /lib/modules/$AMZKVER/build
    ln -sf /usr/src/kernels/$AMZKVER /lib/modules/$AMZKVER/build
fi

git clone -b ena_linux_$ENA_VER https://github.com/amzn/amzn-drivers /usr/src/ena-$ENA_VER
cat << EOS > /usr/src/ena-$ENA_VER/dkms.conf
PACKAGE_NAME="ena"
PACKAGE_VERSION="$ENA_VER"
CLEAN="make -C kernel/linux/ena clean"
MAKE="make -C kernel/linux/ena BUILD_KERNEL=\${kernelver}"
BUILT_MODULE_LOCATION[0]="kernel/linux/ena"
BUILT_MODULE_NAME[0]="ena"
DEST_MODULE_LOCATION[0]="/updates"
DEST_MODULE_NAME[0]="ena"
AUTOINSTALL="yes"
EOS
dkms add -m ena -v $ENA_VER
dkms build -m ena -v $ENA_VER -k $AMZKVER
dkms install -m ena -v $ENA_VER -k $AMZKVER

if [ "$ID" = "ubuntu" ]; then
    update-initramfs -c -k all
else
    dracut --verbose --add-drivers "ixgbevf nvme ena" --force --kver $AMZKVER
fi
